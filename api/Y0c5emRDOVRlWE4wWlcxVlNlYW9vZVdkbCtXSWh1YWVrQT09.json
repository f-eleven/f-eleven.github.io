{"title":"SystemUI模块分析","date":"2018-03-26T15:22:11.000Z","excerpt":"","slug":"SystemUI模块分析","comments":true,"tags":["android","systemui"],"categories":["Android"],"updated":"2018-03-26T15:54:34.978Z","content":"<h2 id=\"2018-3-26\"><a href=\"#2018-3-26\" class=\"headerlink\" title=\"2018/3/26\"></a>2018/3/26</h2><h3 id=\"1-CommandQueue类中的setSystemUiVisibility在哪里调用？\"><a href=\"#1-CommandQueue类中的setSystemUiVisibility在哪里调用？\" class=\"headerlink\" title=\"1. CommandQueue类中的setSystemUiVisibility在哪里调用？\"></a>1. CommandQueue类中的setSystemUiVisibility在哪里调用？</h3><ul>\n<li>CommandQueue继承自IStatusBar.Stub，是IStatusBar的Binder Native端，这个Binder对象的Binder Proxy端将会保存在IStatusBarService中，<br>而StatusBarManagerService继承自IStatusBarService.Stub，这下就把Binder对象的Bn端和Bp端搞清楚了。</li>\n<li>在StatusBarManagerService中有这样一处的调用<br><code>mBar.setSystemUiVisibility(vis, fullscreenStackVis, dockedStackVis, mask, fullscreenBounds, dockedBounds);</code> ，显然这里的调用便链接到CommandQueue中的setSystemUiVisibility()方法。</li>\n<li>StatusBarManagerService中的setSystemUiVisibility()方法的调用则是在NavigationBarTransitions里面触发的，<code>mBarService.setSystemUiVisibility(0, View.SYSTEM_UI_FLAG_LOW_PROFILE, &quot;LightsOutListener&quot;);</code>，mBarService是通过<code>IStatusBarService.Stub.asInterface(ServiceManager.getService(Context.STATUS_BAR_SERVICE));</code>获取到IStausBarService实例。</li>\n</ul>\n<h3 id=\"2-setSystemUiVisibility-param-的参数们解析\"><a href=\"#2-setSystemUiVisibility-param-的参数们解析\" class=\"headerlink\" title=\"2. setSystemUiVisibility(param)的参数们解析\"></a>2. setSystemUiVisibility(param)的参数们解析</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SYSTEM_UI_FLAG_VISIBLE = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SYSTEM_UI_FLAG_LOW_PROFILE = <span class=\"number\">1</span>;    </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SYSTEM_UI_FLAG_HIDE_NAVIGATION = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SYSTEM_UI_FLAG_FULLSCREEN = <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SYSTEM_UI_FLAG_LAYOUT_STABLE = <span class=\"number\">256</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION = <span class=\"number\">512</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN = <span class=\"number\">1024</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://developer.android.google.cn/reference/android/view/View.html#SYSTEM_UI_FLAG_VISIBLE\" target=\"_blank\" rel=\"noopener\">View.SYSTEM_UI_FLAG_VISIBLE</a>：显示状态栏，Activity不全屏显示（恢复到有状态栏的正常情况）。</li>\n<li><a href=\"https://developer.android.google.cn/reference/android/view/View.html#SYSTEM_UI_FLAG_LOW_PROFILE\" target=\"_blank\" rel=\"noopener\">View.SYSTEM_UI_FLAG_LOW_PROFILE</a>：状态栏显示处于低能显示状态（low profile模式），状态栏上一些图标显示会被隐藏。</li>\n<li><a href=\"https://developer.android.google.cn/reference/android/view/View.html#SYSTEM_UI_FLAG_HIDE_NAVIGATION\" target=\"_blank\" rel=\"noopener\">View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</a>：隐藏虚拟按键（导航栏）。</li>\n<li><a href=\"https://developer.android.google.cn/reference/android/view/View.html#SYSTEM_UI_FLAG_FULLSCREEN\" target=\"_blank\" rel=\"noopener\">View.SYSTEM_UI_FLAG_FULLSCREEN</a>：Activity全屏显示，且状态栏会被覆盖掉。</li>\n<li><a href=\"https://developer.android.google.cn/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_STABLE\" target=\"_blank\" rel=\"noopener\">View.SYSTEM_UI_FLAG_LAYOUT_STABLE</a>：保持View Layout不变，隐藏状态栏或者导航栏后，View不会拉伸。</li>\n<li><a href=\"https://developer.android.google.cn/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\" target=\"_blank\" rel=\"noopener\">View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</a>：隐藏虚拟按键（导航栏），Activity底端布局部分会被导航栏遮住。</li>\n<li><a href=\"https://developer.android.google.cn/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\" target=\"_blank\" rel=\"noopener\">View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</a>：Activity全屏显示，但状态栏不会被隐藏覆盖，状态栏依然可见，Activity顶端布局部分会被状态栏遮住。</li>\n</ul>\n","next":{"title":"我的数学启蒙","slug":"我的数学启蒙"}}